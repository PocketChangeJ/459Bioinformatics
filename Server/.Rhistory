sratable <- read.table("C:\Users\Wesley\AppData\Local\Temp\SraRunTable.txt",header=T)
sratable <- read.table("C://Users//Wesley//AppData//Local//Temp//SraRunTable.txt",header=T)
sratable <- read.table("C://Users//Wesley//AppData//Local//Temp//SraRunTable.txt",header=T,sep="\t")
head(sratable)
srapipe <- read.table("Z//SRA//SRAPipeline2.sh",header=F,sep=" ")
srapipe <- read.table("Z://SRA//SRAPipeline2.sh",header=F,sep=" ")
head(srapipe)
mt <- which(sratable$SRA_Sample_s%in%srapipe$V5)
mt
mt <- which(as.character(sratable$SRA_Sample_s)%in%as.character(srapipe$V5))
mt
View(sratable$Run_s)
mt <- which(as.character(sratable$Run_s)%in%as.character(srapipe$V5))
mt
SRAs <- sratable[mt,]
View(SRAs)
levels(SRAs$BioSample_s)
blca <- read.delim("../Downloads//nationwidechildrens.org_clinical_patient_blca.tsv",header=F)
View(blca)
??k-shell
??shell
?betweenness
library(igraph)
assg <- graph.formula(a-f,a-b-c-d-e-f-g,g-a-h-i-j,g-b-k-l-m,
g-c-n-o-p,g-d-q-r-s,g-e-t-v,g-f-w-x,b-e-s)
c1 <- degree(assg)
c2 <- betweenness(assg)
c3 <- closeness(assg)
c1
c2
c3
?clustering
??clustering
?transitivity
c4 <- transitivity(assg,type="localundirected")
graph.coreness(assg)
?evcent
evcent(assg)
??centrality
page.rank(assg)
plot(page.rank(assg)$vector)
install.packages("NeMo")
library(NeMo)
?graph.motifs
graph.motifs(assg)
graph.motifs(assg,size=4)
c <- cbind(c1,c2,c3,c4,c5,c6,c7)
c1 <- degree(assg)
c2 <- betweenness(assg)
c3 <- closeness(assg)
c4 <- transitivity(assg,type="localundirected")
c5 <- graph.coreness(assg)
c6 <- evcent(assg)$vector
c7 <- page.rank(assg)$vector #using pageRank instead of semi-local centrality
#c8 <-
c <- cbind(c1,c2,c3,c4,c5,c6,c7)
View(c)
?eigen
eigen(c)
cbind(1,3:1,1:3)
cov(c)
c[is.na(c)]<-0
c
cv <- cov(c)
eigen(cv)
w <- eigen(cv)$values
w
w <- eigen(cv)$vectors
w
max(w)
w <- eigen(cv)$values
fpc <- sum(w*c)
fpc
fpc <- sum(w*c[1,])
fpc
dim(c)
fpc <- c()
for (x in 1:dim(c)[1]){
fpc <- c(fpc,sum(w*c[x,]))
}
fpc
plot(fpc)
max(fpc)
names(fpc) <- names(degree(assg))
fpc
names(which(fpc==max(fpc)))
tkplot(assg)
?fpc
?plot
plot(fpc,xlab=names(fpc))
plot(fpc,xlim=names(fpc))
order(fpc)
fpc[order(fpc)]
tail(names(fpc[order(fpc)]))
t.g <- graph.edgelist(assg.edge[intersect(which(assg.edge[,1]%in%t),which(assg.edge[,2]%in%t)),])
t <- tail(names(fpc[order(fpc)]))
assg.edge <- get.edgelist(assg)
t.g <- graph.edgelist(assg.edge[intersect(which(assg.edge[,1]%in%t),which(assg.edge[,2]%in%t)),])
tkplot(t.g)
assg.edge <- get.edgelist(assg)
t.g <- graph.edgelist(assg.edge[intersect(which(assg.edge[,1]%in%t),which(assg.edge[,2]%in%t)),],
directed=F)
tkplot(t.g)
library(igraph)
source("C://Users//Wesley//Documents//14-15//Spring15//EECS459//Project//Code//RCCFns.R")
assg <- graph.formula(a-f,a-b-c-d-e-f-g,g-a-h-i-j,g-b-k-l-m,
g-c-n-o-p,g-d-q-r-s,g-e-t-v,g-f-w-x,b-e-s)
plot(assg)
tkplot(assg)
phi <- c()
for (x in 1:5){
phi <- c(phi,RCC(x,assg))
}
plot(RCC)
head(rho)
rho <- c()
for (x in 1:5){
rho <- c(rho, normalize.RCC(assg,10,x))
}
plot(rho)
c1 <- degree(assg)
c2 <- betweenness(assg)
c3 <- closeness(assg)
c4 <- transitivity(assg,type="localundirected")
c5 <- graph.coreness(assg)
c6 <- evcent(assg)$vector
c7 <- page.rank(assg)$vector #using pageRank instead of semi-local centrality
c <- cbind(c1,c2,c3,c4,c5,c6,c7)
c[is.na(c)]<-0
cv <- cov(c)
w <- eigen(cv)$values
fpc <- c()
for (x in 1:dim(c)[1]){
fpc <- c(fpc,sum(w*c[x,]))
}
names(fpc) <- names(desgree(assg))
names(which(fpc==max(fpc)))
names(fpc) <- names(degree(assg))
names(which(fpc==max(fpc)))
plot(fpc)
t <- tail(names(fpc[order(fpc)]))
assg.edge <- get.edgelist(assg)
t.g <- graph.edgelist(assg.edge[intersect(which(assg.edge[,1]%in%t),which(assg.edge[,2]%in%t)),],
directed=F)
tkplot(t.g)
q("no")
q("no")
var(runif(100,-1,1))
var(rnorm(100,0,1))
var(runif(100,-1,1)*2)
plot(t*2+1)
t <- 1:100
plot(t*2+1)
plot(t*2+1,type="l")
tmp <- data.frame(cbind(t*2+1,t*1.5+10))
tmp <- data.frame(cbind(t*2+1,t*1.5+10,1:100))
colnames(tmp) <- c("V1","V2","V3")
tmp <- data.frame(cbind(t*2+1,1:100))
tmp <- rbind(cbind(t*1.5+10,1:100))
colnames(tmp) <- c("V1","V2")
dim(tmp)
tmp <- data.frame(cbind(t*2+1,1:100))
tmp <- rbind(tmp,cbind(t*1.5+10,1:100))
colnames(tmp2) <- c("V1","V2")
tmp <- data.frame(cbind(t*2+1,1:100))
colnames(tmp) <- c("V1","V2")
tmp2 <- data.frame(cbind(t*1.5+10,1:100))
colnames(tmp2) <- c("V1","V2")
tmp <- rbind(tmp,tmp2)
head(tmp)
tmp$V3 <- c(rep("1",100),rep("2",100))
?geom_line
?geom
??geom
ggplot(data=tmp,aes(x=V2,y=V2))+geom_line(aes(group=V3))
library(ggplot2)
ggplot(data=tmp,aes(x=V2,y=V2))+geom_line(aes(group=V3))
head(tmp)
ggplot(data=tmp,aes(x=V1,y=V2))+geom_line(aes(group=V3))
ggplot(data=tmp,aes(x=V1,y=V2))+geom_line(aes(colour=V3,group=V3))
ggplot(data=tmp,aes(x=V1,y=V2))+geom_line(aes(colour=V3,group=V3),size=5)
ggplot(data=tmp,aes(x=V1,y=V2))+geom_line(aes(colour=V3,group=V3),size=3)
ggplot(data=tmp,aes(x=V1,y=V2))+geom_line(aes(colour=V3,group=V3),size=2.5)
tmp <- data.frame(cbind(t^.1,1:100))
colnames(tmp) <- c("V1","V2")
plot(tmp)
plot(t^.1)
plot(t^-.1)
plot(t^-.1,type="l")
lines(t^-.23)
lines(t^-6)
plot(t^-6,type="l")
lines(t^-.25,col="blue")
lines(t^-.1,col='red')
main("Power Laws")
title("Power Laws")
plot(1/(1+exp(-2t/3)))
plot(1/(1+exp(-2*t/3)))
plot(1/(1+exp(-2*t/3)),type="l")
plot(1/(1+exp(t)),type="l")
plot(1/(1+exp(-t)),type="l")
plot(1/(1+exp(-2*t/3)),type="l")
lines(1/(1+exp(-t)),col="blue")
lines(1/(1+exp(-5*t/3)),col="blue")
title("Logistic Relationship")
q("no")
setwd("Z:/EECS459")
setwd("Z:/EECS459")
load("*.RData")
load("FullRCC.RData")
dgF <- names(rccEE)
library(ggplot2)
rc <- cbind(rccEE,dgF)
ggplot(rc,aes(x=dgF,y=rc))+geom_point()
rc <- data.frame(cbind(rccEE,dgF))
ggplot(rc,aes(x=dgF,y=rc))+geom_point()
ggplot(rc,aes(x=dgF,y=rccEE))+geom_point()
head(rc)
rc$rccEE <- as.numeric(as.character(rc$rccEE))
rc$dgF <- as.numeric(as.character(rc$dgF))
ggplot(rc,aes(x=dgF,y=rccEE))+geom_point()
?geom_title
ggplot(rc,aes(x=dgF,y=rccEE))+geom_point()+xlim(0,30)+ylim(0,3)
ggplot(rc,aes(x=dgF,y=rccEE))+geom_point()+xlim(0,30)+ylim(0,3.2)
ggplot(rc,aes(x=dgF,y=rccEE))+geom_point()+xlim(0,30)+ylim(0,3.2)+labs(x="Degree",y="Normalized Rich-Club Coefficient",main="Exocytosis and EndoCytosis Rich-Club Coefficients")
ggplot(rc,aes(x=dgF,y=rccEE))+geom_point()+xlim(0,30)+ylim(0,3.2)+labs(x="Degree",y="Normalized Rich-Club Coefficient",title="Exocytosis and EndoCytosis Rich-Club Coefficients")
load("ExoRCC.RData")
setwd("Z:/EECS459/")
load("ExoRCC.RData")
dgF <- names(rccEXO)
dgF <- names(rccEXO)
rc2 <- data.frame(cbind(rccEXO,dgF))
rc2$rccEXO <- as.numeric(as.character(rc2$rccEXO))
rc2$dgF <- as.numeric(as.character(rc2$dgF))
ggplot(rc2,aes(x=dgF,y=rccEXO))+geom_point()+xlim(0,30)+ylim(0,3.2)+labs(x="Degree",y="Normalized Rich-Club Coefficient",title="Exocytosis Rich-Club Coefficients")
View9rc2
View(rc2)
ggplot(rc2,aes(x=dgF,y=rccEXO))+geom_point()+xlim(0,10)+ylim(0,3.2)+labs(x="Degree",y="Normalized Rich-Club Coefficient",title="Exocytosis Rich-Club Coefficients")
load("EndoRCC.RData")
dgF <- names(rccENDO)
rc3 <- data.frame(cbind(rccENDO,dgF))
rc3$rccENDO <- as.numeric(as.character(rc3$dgF))
rc3$dgF <- as.numeric(as.character(rc3$dgF))
ggplot(rc2,aes(x=dgF,y=rccENDO))+geom_point()+xlim(0,10)+ylim(0,3.2)+labs(x="Degree",y="Normalized Rich-Club Coefficient",title="Endocytosis Rich-Club Coefficients")
ggplot(rc3,aes(x=dgF,y=rccENDO))+geom_point()+xlim(0,10)+ylim(0,3.2)+labs(x="Degree",y="Normalized Rich-Club Coefficient",title="Endocytosis Rich-Club Coefficients")
View(rc3)
dgF <- names(rccENDO)
rc3 <- data.frame(cbind(rccENDO,dgF))
rc3$rccENDO <- as.numeric(as.character(rc3$rccENDO))
rc3$dgF <- as.numeric(as.character(rc3$dgF))
ggplot(rc3,aes(x=dgF,y=rccENDO))+geom_point()+xlim(0,10)+ylim(0,3.2)+labs(x="Degree",y="Normalized Rich-Club Coefficient",title="Endocytosis Rich-Club Coefficients")
View(rc3)
ggplot(rc3,aes(x=dgF,y=rccENDO))+geom_point()+xlim(0,25)+ylim(0,3)+labs(x="Degree",y="Normalized Rich-Club Coefficient",title="Endocytosis Rich-Club Coefficients")
load("FullFPC.RData")
load("fullNetwork.RData")
names(fpc.score) <- V(exoEndo.graph)$name
library(igraph)
names(fpc.score) <- V(exoEndo.graph)$name
fpc.score <- fpc.score[order(fpc.score)]
tail(fpc.score)
head(t(fpc.score))
head(t(as.data.frame(fpc.score)))
head(as.data.frame(fpc.score))
write.csv(as.data.frame(fpc.score),"~/14-15//Spring15//EECS459//Project//FullFPC.csv",quote=FALSE,row.names=TRUE)
setwd("Z:/EECS459/")
load("FullValFPC.RData")
plot(fpc.score)
load("FullFPC.RData")
names(fpc.score) <- V(exoEndo.graph)$name
plot(fpc.score)
plot(fpc.val)
points(fpc.val)
plot(fpc.score-fpc.val)
fpcdf <- data.frame(cbind(fpc.score,fpc.val))
head(fpcdf)
ggplot(fpcdf,aes(x=fpc.score,y=fpc.val))+geom_point()
ggplot(fpcdf,aes(x=fpc.score,y=fpc.val))+geom_point()+labs(x="FPC Score",y="FPC Validation")
load("ExoFPC.RData")
load("EXONetwork.RData")
fpc.EXO2 <- fpc.EXO
names(fpc.EXO2) <- V(exo.graph)$name
fpc.EXO2 <- fpc.EXO2[order(fpc.EXO2)]
write.csv(as.data.frame(fpc.EXO2),"~/14-15/Spring15/EECS459/Project/ExoFPC.csv",quote=FALSE,row.names=TRUE)
load("ExoValFPC.RData")
fpcdf2 <- data.frame(cbind(fpc.EXO,fpc.valX))
ggplot(fpcdf2,aes(x=fpc.EXO,fpc.valX))+geom_point()
ggplot(fpcdf2,aes(x=fpc.EXO,fpc.valX))+geom_point()+labs(x="FPC Score",y="FPC Validation")
load("EndoFPC.RData")
load("ENDONetwork.RData")
fpc.ENDO2 <- fpc.ENDO
names(fpc.ENDO2) <- V(endo.graph)$name
fpc.ENDO2 <- fpc.ENDO2[order(fpc.ENDO2)]
write.csv(as.data.frame(fpc.ENDO2)),"~/14-15/Spring15/EECS459/Project/EndoFPC.csv",quote=FALSE,row.names=TRUE)
write.csv(as.data.frame(fpc.ENDO2),"~/14-15/Spring15/EECS459/Project/EndoFPC.csv",quote=FALSE,row.names=TRUE)
load("EndoValFPC.RData")
fpcdf3 <- data.frame(cbind(fpc.ENDO,fpc.valENDO))
ggplot(fpcdf3,aes(x=fpc.ENDO,y=fpc.valENDO))+geom_point()+labs(x="FPC Score",y="FPC Validation")
load("FullRichClub.RData")
library(corrplot)
corrplot(finalList[[1]],is.corr=FALSE)
col4 <- colorRampPalette(c("#7F0000", "red", "#FF7F00", "yellow", "#7FFF7F","cyan", "#007FFF", "blue", "#00007F"))
corrplot(finalList[[1]],is.corr=FALSE,method="color",col = col4(34),cl.length=18,title="Max for Different Combinations of Alpha&Beta", mar=c(1,1,1,1))
View(finalList[[1]])
corrplot(finalList[[1]],is.corr=FALSE,method="color",col = col4(226-16),cl.length=210,title="Max for Different Combinations of Alpha&Beta", mar=c(1,1,1,1))
corrplot(finalList[[1]],is.corr=FALSE,method="color",col = col4(210),cl.length=210,mar=c(1,1,1,1))
?corrplot
corrplot(finalList[[1]],is.corr=FALSE,method="color",col = col4(210),cl.length=210,mar=c(1,1,1,1),t.pos="n")
corrplot(finalList[[1]],is.corr=FALSE,method="color",col = col4(210),cl.length=210,mar=c(1,1,1,1),tl.pos="n")
corrplot(finalList[[1]],is.corr=FALSE,method="color",col = col4(210),cl.length=210,mar=c(1,1,1,1))
corrplot(finalList[[1]],is.corr=FALSE,method="color",col = col4(210),cl.length=210,mar=c(1,1,1,1),cl.pos="n")
head(finalList[[2]])
dev.off()
rc.full <- finalList[[2]][order(finalList[[2]])]
write.csv(as.data.frame(rc.full),"~/14-15/Spring15/EECS459/Project/FullRichClub.csv",quote=F,row.names=T)
q("yes")
