sratable <- read.table("C:\Users\Wesley\AppData\Local\Temp\SraRunTable.txt",header=T)
sratable <- read.table("C://Users//Wesley//AppData//Local//Temp//SraRunTable.txt",header=T)
sratable <- read.table("C://Users//Wesley//AppData//Local//Temp//SraRunTable.txt",header=T,sep="\t")
head(sratable)
srapipe <- read.table("Z//SRA//SRAPipeline2.sh",header=F,sep=" ")
srapipe <- read.table("Z://SRA//SRAPipeline2.sh",header=F,sep=" ")
head(srapipe)
mt <- which(sratable$SRA_Sample_s%in%srapipe$V5)
mt
mt <- which(as.character(sratable$SRA_Sample_s)%in%as.character(srapipe$V5))
mt
View(sratable$Run_s)
mt <- which(as.character(sratable$Run_s)%in%as.character(srapipe$V5))
mt
SRAs <- sratable[mt,]
View(SRAs)
levels(SRAs$BioSample_s)
blca <- read.delim("../Downloads//nationwidechildrens.org_clinical_patient_blca.tsv",header=F)
View(blca)
??k-shell
??shell
?betweenness
library(igraph)
assg <- graph.formula(a-f,a-b-c-d-e-f-g,g-a-h-i-j,g-b-k-l-m,
g-c-n-o-p,g-d-q-r-s,g-e-t-v,g-f-w-x,b-e-s)
c1 <- degree(assg)
c2 <- betweenness(assg)
c3 <- closeness(assg)
c1
c2
c3
?clustering
??clustering
?transitivity
c4 <- transitivity(assg,type="localundirected")
graph.coreness(assg)
?evcent
evcent(assg)
??centrality
page.rank(assg)
plot(page.rank(assg)$vector)
install.packages("NeMo")
library(NeMo)
?graph.motifs
graph.motifs(assg)
graph.motifs(assg,size=4)
c <- cbind(c1,c2,c3,c4,c5,c6,c7)
c1 <- degree(assg)
c2 <- betweenness(assg)
c3 <- closeness(assg)
c4 <- transitivity(assg,type="localundirected")
c5 <- graph.coreness(assg)
c6 <- evcent(assg)$vector
c7 <- page.rank(assg)$vector #using pageRank instead of semi-local centrality
#c8 <-
c <- cbind(c1,c2,c3,c4,c5,c6,c7)
View(c)
?eigen
eigen(c)
cbind(1,3:1,1:3)
cov(c)
c[is.na(c)]<-0
c
cv <- cov(c)
eigen(cv)
w <- eigen(cv)$values
w
w <- eigen(cv)$vectors
w
max(w)
w <- eigen(cv)$values
fpc <- sum(w*c)
fpc
fpc <- sum(w*c[1,])
fpc
dim(c)
fpc <- c()
for (x in 1:dim(c)[1]){
fpc <- c(fpc,sum(w*c[x,]))
}
fpc
plot(fpc)
max(fpc)
names(fpc) <- names(degree(assg))
fpc
names(which(fpc==max(fpc)))
tkplot(assg)
?fpc
?plot
plot(fpc,xlab=names(fpc))
plot(fpc,xlim=names(fpc))
order(fpc)
fpc[order(fpc)]
tail(names(fpc[order(fpc)]))
t.g <- graph.edgelist(assg.edge[intersect(which(assg.edge[,1]%in%t),which(assg.edge[,2]%in%t)),])
t <- tail(names(fpc[order(fpc)]))
assg.edge <- get.edgelist(assg)
t.g <- graph.edgelist(assg.edge[intersect(which(assg.edge[,1]%in%t),which(assg.edge[,2]%in%t)),])
tkplot(t.g)
assg.edge <- get.edgelist(assg)
t.g <- graph.edgelist(assg.edge[intersect(which(assg.edge[,1]%in%t),which(assg.edge[,2]%in%t)),],
directed=F)
tkplot(t.g)
library(igraph)
source("C://Users//Wesley//Documents//14-15//Spring15//EECS459//Project//Code//RCCFns.R")
assg <- graph.formula(a-f,a-b-c-d-e-f-g,g-a-h-i-j,g-b-k-l-m,
g-c-n-o-p,g-d-q-r-s,g-e-t-v,g-f-w-x,b-e-s)
plot(assg)
tkplot(assg)
phi <- c()
for (x in 1:5){
phi <- c(phi,RCC(x,assg))
}
plot(RCC)
head(rho)
rho <- c()
for (x in 1:5){
rho <- c(rho, normalize.RCC(assg,10,x))
}
plot(rho)
c1 <- degree(assg)
c2 <- betweenness(assg)
c3 <- closeness(assg)
c4 <- transitivity(assg,type="localundirected")
c5 <- graph.coreness(assg)
c6 <- evcent(assg)$vector
c7 <- page.rank(assg)$vector #using pageRank instead of semi-local centrality
c <- cbind(c1,c2,c3,c4,c5,c6,c7)
c[is.na(c)]<-0
cv <- cov(c)
w <- eigen(cv)$values
fpc <- c()
for (x in 1:dim(c)[1]){
fpc <- c(fpc,sum(w*c[x,]))
}
names(fpc) <- names(desgree(assg))
names(which(fpc==max(fpc)))
names(fpc) <- names(degree(assg))
names(which(fpc==max(fpc)))
plot(fpc)
t <- tail(names(fpc[order(fpc)]))
assg.edge <- get.edgelist(assg)
t.g <- graph.edgelist(assg.edge[intersect(which(assg.edge[,1]%in%t),which(assg.edge[,2]%in%t)),],
directed=F)
tkplot(t.g)
q("no")
q("no")
var(runif(100,-1,1))
var(rnorm(100,0,1))
var(runif(100,-1,1)*2)
plot(t*2+1)
t <- 1:100
plot(t*2+1)
plot(t*2+1,type="l")
tmp <- data.frame(cbind(t*2+1,t*1.5+10))
tmp <- data.frame(cbind(t*2+1,t*1.5+10,1:100))
colnames(tmp) <- c("V1","V2","V3")
tmp <- data.frame(cbind(t*2+1,1:100))
tmp <- rbind(cbind(t*1.5+10,1:100))
colnames(tmp) <- c("V1","V2")
dim(tmp)
tmp <- data.frame(cbind(t*2+1,1:100))
tmp <- rbind(tmp,cbind(t*1.5+10,1:100))
colnames(tmp2) <- c("V1","V2")
tmp <- data.frame(cbind(t*2+1,1:100))
colnames(tmp) <- c("V1","V2")
tmp2 <- data.frame(cbind(t*1.5+10,1:100))
colnames(tmp2) <- c("V1","V2")
tmp <- rbind(tmp,tmp2)
head(tmp)
tmp$V3 <- c(rep("1",100),rep("2",100))
?geom_line
?geom
??geom
ggplot(data=tmp,aes(x=V2,y=V2))+geom_line(aes(group=V3))
library(ggplot2)
ggplot(data=tmp,aes(x=V2,y=V2))+geom_line(aes(group=V3))
head(tmp)
ggplot(data=tmp,aes(x=V1,y=V2))+geom_line(aes(group=V3))
ggplot(data=tmp,aes(x=V1,y=V2))+geom_line(aes(colour=V3,group=V3))
ggplot(data=tmp,aes(x=V1,y=V2))+geom_line(aes(colour=V3,group=V3),size=5)
ggplot(data=tmp,aes(x=V1,y=V2))+geom_line(aes(colour=V3,group=V3),size=3)
ggplot(data=tmp,aes(x=V1,y=V2))+geom_line(aes(colour=V3,group=V3),size=2.5)
tmp <- data.frame(cbind(t^.1,1:100))
colnames(tmp) <- c("V1","V2")
plot(tmp)
plot(t^.1)
plot(t^-.1)
plot(t^-.1,type="l")
lines(t^-.23)
lines(t^-6)
plot(t^-6,type="l")
lines(t^-.25,col="blue")
lines(t^-.1,col='red')
main("Power Laws")
title("Power Laws")
plot(1/(1+exp(-2t/3)))
plot(1/(1+exp(-2*t/3)))
plot(1/(1+exp(-2*t/3)),type="l")
plot(1/(1+exp(t)),type="l")
plot(1/(1+exp(-t)),type="l")
plot(1/(1+exp(-2*t/3)),type="l")
lines(1/(1+exp(-t)),col="blue")
lines(1/(1+exp(-5*t/3)),col="blue")
title("Logistic Relationship")
q("no")
plot(rcE)
setwd("~/14-15/Spring15/EECS459/Project/")
load("ExoRichClub.RData")
rcE <- finalListX[[2]][order(finalListX[[2]])]
rcE <- rcE/max(rcE)
plot(rcE)
write.csv(as.data.frame(rcE),"~/14-15/Spring15/EECS459/Project/ExoRichClub.csv",quote=F,row.names=T)
write.csv(as.data.frame(rcE),"~/14-15/Spring15/EECS459/Project/ExoRichClub.csv",quote=F,row.names=T)
load("EndoRichClub2.RData")
rcE2 <- finalListE[[2]][order(finalListE[[2]])]
plot(rcE2)
max(rcE2)
q("no")
library(igraph)
assg <- graph.formula(a-f,a-b-c-d-e-f-g,g-a-h-i-j,g-b-k-l-m,
g-c-n-o-p,g-d-q-r-s,g-e-t-v,g-f-w-x,b-e-s)
deltaS <- function(a,b,m,n){
return(1/(1+exp(-(m-n*b)*tan(pi*a/2))))
}
runCS <- function(a,b,assg){
require(igraph)
print(c(a,b))
assg.mat <- get.adjacency(assg)
c.StarU <- deltaS(a,b,1:vcount(assg),vcount(assg))
c.Star <- c.StarU/sum(c.StarU)
c.i <- sample(c.Star,vcount(assg))
#nest function in order to only have to pass c.i
sa.optim <- function(c.i){
c <- c.i%*%t(c.i)
r <- sum(as.matrix(assg.mat%*%c))
return(-r)
}
out <- optim(fn=sa.optim,par=c.i,method="SANN")
cs <- out$par*(-out$value)
return(cs)
}
runRichClub <- function(graph2){
graph2.mat <- get.adjacency(graph2)
#c.StarU <- deltaS(aT,bT,1:vcount(graph2),vcount(graph2))
#c.Star <- c.StarU/sum(c.StarU)
#c.i <- sample(c.Star,vcount(graph2))
#c.j <- sample(c.Star,vcount(graph2))
#cs.ab <- matrix(nrow=10,ncol=10)
cs.ab <- data.frame(matrix(nrow=100,ncol=vcount(graph2)))
#cs.ab <- c()
z<-1
l <- matrix(nrow=100,ncol=2)
s <- seq(.1,1,.1)
for (a in 1:10){
for (b in 1:10){
#cs.ab[z,] <- runCS(s[a],s[b],graph2)
#print(paste(s[a],s[b]))
l[z,] <- c(s[a],s[b])
z<-z+1
}
}
#rewrite of this command
cs.ab <- foreach(z=1:nrow(l),.combine=rbind,.packages='igraph',.export=c('deltaS','runCS','runRichClub')) %dopar% (runCS(l[z,1],l[z,2],graph2))
cs.score <- colSums(cs.ab)
cs.norm <- cs.score/max(cs.score)
names(cs.norm) <- names(degree(graph2))
#turn into function
#also match the scores into a contour plot for alpha and beta
maxScore <- c()
for (x in 1:100){
maxScore <- c(maxScore,which(cs.ab[x,]==max(cs.ab[x,])))
}
maxScore.mat <- matrix(maxScore,ncol=10,byrow=TRUE)
rownames(maxScore.mat) <- s
colnames(maxScore.mat) <- s
return(list(maxScore.mat,cs.norm))
}
rcc.validate <- function(assg){
n <- V(assg)$name
f.rem <- function(assg, i){
return(delete.vertices(assg,n[i]))
}
#dopar here
fpc.valsT <- foreach(i=1:length(10),.combine=rbind,.export=c('deltaS','runCS','runRichClub'),.packages=c('igraph','doParallel')) %dopar% (as.numeric(runRichClub(f.rem(assg,i))[[2]]))
return(fpc.valsT)
}
rcc.validate(assg)
rcc.vals <- c(0,rcc.valT2[1,])
for(j in 2:nrow(rcc.valT2)){
rcc.tmp <- as.numeric(rcc.valT2[j,])
rcc.vals <- rbind(rcc.vals, c(rcc.tmp[1:(j-1)],0,rcc.tmp[j:length(rcc.tmp)]))
}
library(igraph)
?graph.coreness
graph.coreness
biogrid <- read.delim("BIOGRID-fixed.txt",header=TRUE,fill=TRUE,stringsAsFactors=FALSE)
head(biogrid)
setwd("Z:/EECS459")
load("EndoValRC.RData")
load("EndoValRC.RData")
setwd("~/14-15/Spring15/EECS459/Project/")
load("EndoRichClub2.RData")
rcE2 <- finalListE[[2]][order(finalListE[[2]])]
plot(rcE2,rcc.valENDO)
plot(finalList2,rcc.valENDO)
plot(finalList[[2]],rcc.valENDO)
plot(finalListE[[2]],rcc.valENDO)
rcdf <- data.frame(cbind(finalListE[[2]],rcc.valENDO))
rcdf <- data.frame(cbind(finalListE[[2]],rcc.valENDO))
library(ggplot2)
head(rcdf)
ggplot(rcdf,aes(x=V1,y=rcc.valENDO))+geom_point()+labs(x="Core/Periphery Score",y="Core/Periphery Validation")
load("ExoRichClub.RData")
load("ExoValRichClub.RData")
rcdf2 <- data.frame(cbind(finalListX[[2]],rcc.valX))
ggplot(rcdf2,aes(x=V1,y=rcc.valX))+geom_point()+labs(x="Core/Periphery Score",y="Core/Periphery Validation")
rcc.valX <- rcc.valX/max(rcc.valX)
rcdf2 <- data.frame(cbind(finalListX[[2]],rcc.valX))
ggplot(rcdf2,aes(x=V1,y=rcc.valX))+geom_point()+labs(x="Core/Periphery Score",y="Core/Periphery Validation")
load("ExoValRichClub.RData")
finalListX[[2]]<- finalListX[[2]]/max(finalListX[[2]])
rcdf2 <- data.frame(cbind(finalListX[[2]],rcc.valX))
ggplot(rcdf2,aes(x=V1,y=rcc.valX))+geom_point()+labs(x="Core/Periphery Score",y="Core/Periphery Validation")
ggplot(rcdf2,aes(x=V1,y=rcc.valX))+geom_point()+labs(x="Core/Periphery Score",y="Core/Periphery Validation")+stat_smooth(method="loess")
?stat_smooth
ggplot(rcdf2,aes(x=V1,y=rcc.valX))+geom_point()+labs(x="Core/Periphery Score",y="Core/Periphery Validation")+stat_smooth(method="rlm")
ggplot(rcdf2,aes(x=V1,y=rcc.valX))+geom_point()+labs(x="Core/Periphery Score",y="Core/Periphery Validation")+stat_smooth(method="glm")
ggplot(rcdf2,aes(x=V1,y=rcc.valX))+geom_point()+labs(x="Core/Periphery Score",y="Core/Periphery Validation")+stat_smooth(method="lm")
ggplot(rcdf2,aes(x=V1,y=rcc.valX))+geom_point()+labs(x="Core/Periphery Score",y="Core/Periphery Validation")+stat_smooth(method="lm",se=F)
load("fullNetwork.RData")
length(V(exoEndo.graph))
library(igraph)
length(V(exoEndo.graph))
length(V(exoEndo.graph))/4
length(V(exoEndo.graph))/2
length(V(exoEndo.graph))/6
56+56+57+57
length(rep(0,56),rep(0,56),rep(0,57),rep(0,57))
length(c(rep(0,56),rep(0,56),rep(0,57),rep(0,57)))
56*2
113+57
171+57
171+55
library(c(ggplot2,igraph))
library(igraph)
library(ggplot2)
load("FullRCC.RData")
setwd("Z:/EECS459")
load("FullRCC.RData")
load("ExoRCC.RData")
load("EndoRCC.RData")
load("FullFPC.RData")
load("FullValFPC.RData")
load("ExoFPC.RData")
load("ExoValFPC.RData")
load("EndoFPC.RData")
load("EndoValFPC.RData")
load("FullRichClub.RData")
load("ExoRichClub.RData")
load("EndoRichClub2.RData")
load("EndoValRC.RData")
load("ExoValRichClub.RData")
setwd("~/14-15/Spring15/EECS459/Project/")
ggplot(data.frame(cbind(finalList[[2]],fpc.score)),aes(x=V1,y=fpc.score))+geom_point()+labs(x="Core/Periphery Score",y="FPC Score",title="Full Network")
ggplot(data.frame(cbind(finalListE[[2]],fpc.ENDO)),aes(x=V1,y=fpc.ENDO))+geom_point()+labs(x="Core/Periphery Score",y="FPC Score",title="Endocytosis")
ggplot(data.frame(cbind(finalListX[[2]],fpc.EXO)),aes(x=V1,y=fpc.EXO))+geom_point()+labs(x="Core/Periphery Score",y="FPC Score",title="Exocytosis")
load("fullNetwork.RData")
tkplot(exoEndo.graph)
get.vertex.attribute(exoEndo.graph,COPS5)
get.vertex.attribute(exoEndo.graph,"COPS5")
get.vertex.attribute(exoEndo.graph,2)
?get.vertex.attribute
V(exoEndo.graph)["COPS5"]
V(exoEndo.graph)["COPS5"]$color <- "red"
tkplot(exoEndo.graph)
V(exoEndo.graph)$color <- "blue"
tkplot(exoEndo.graph)
V(exoEndo.graph)$color <- "lightblue"
tkplot(exoEndo.graph)
V(exoEndo.graph)[c("COPS5","LYN","SRC","GRB2","EGFR")] <- "red"
V(exoEndo.graph)[c("COPS5","LYN","SRC","GRB2","EGFR")]
V(exoEndo.graph)[c("COPS5","LYN","SRC","GRB2","EGFR")]$color <- "red"
tkplot(exoEndo.graph)
load("ENDONetwork.RData")
load("EXONetwork.RData")
V(exo.graph)$color <- "lightblue"
V(exo.graph)[c("RPH3AL","STXBP1","STX1A","SYTL4","RAB27B")]$color <- "red"
tkplot(exo.graph)
V(endo.graph)$color <- "lightblue"
V(endo.graph)[c("TNK2","CDC42","SRC","GRB2","EGFR")]$color <- "red"
tkplot(endo.graph)
ggplot(data.frame(cbind(finalListX[[2]]/max(finalListX[[2]]),fpc.EXO)),aes(x=V1,y=fpc.EXO))+geom_point()+labs(x="Core/Periphery Score",y="FPC Score",title="Exocytosis")
setwd("Z:/EECS459/")
load("FullVal1.RData")
load("FullVal2.RData")
setwd("~/14-15/")
fullVal <- c(rcc.val1,rcc.val2)
rcc.valT2 <- do.call(fullVal,rbind)
rcc.valT2 <- do.call(rbind,fullVal)
rcc.vals <- c(0,rcc.valT2[1,])
for(j in 2:(nrow(rcc.valT2)-1)){
rcc.tmp <- as.numeric(rcc.valT2[j,])
#print(length(rcc.tmp))
rv <- c(rcc.tmp[1:(j-1)],0,rcc.tmp[j:length(rcc.tmp)])
print(length(rv))
rcc.vals <- rbind(rcc.vals, rv)
}
rcc.vals <- rbind(rcc.vals,c(as.numeric(rcc.valT2[j,]),0))
dim(rcc.vals)
rcc.val <- as.numeric(colSums(rcc.vals)/length(V(exoEndo.graph)))
cor(rcc.val,finalList[[2]])
load("FullRCC.RData")
dgF <- names(rccEE)
setwd("Z:/EECS459/")
load("FullRCC.RData")
dgF <- names(rccEE)
rc <- data.frame(cbind(rccEE,dgF))
load("ExoRCC.RData")
load("EndoRCC.RData")
setwd("~/")
names(rccEE)
dgF <- names(rccEE)
rc <- data.frame(cbind(rccEE,dgF))
dgF2 <- names(rccEXO)
rc2 <- data.frame(cbind(rccEXO,dgF2))
dgF3 <- names(rccENDO)
rc3 <- data.frame(cbind(rccENDO,dgF3))
head(rc)
head(rc2)
head(rc3)
rc$Type <- "Full"
rc2$Type <- "Exocytosis"
rc3$Type <- "Endocytosis"
colnames(rc) <- c("Normalized Rich-Club Coefficient","Degree","Network")
colnames(rc2) <- c("Normalized Rich-Club Coefficient","Degree","Network")
colnames(rc3) <- c("Normalized Rich-Club Coefficient","Degree","Network")
rcFull <- data.frame(rbind(rc,rc2,rc3))
colnames(rcFull)[1] <- "NormalizedRich-ClubCoefficient"
rcFull$NormalizedRich-ClubCoefficient <- as.numeric(as.character(rcFull$NormalizedRich-ClubCoefficient))
rcFull[,1] <- as.numeric(as.character(rcFull[,1]))
rcFull[,2] <- as.numeric(as.character(rcFull[,2]))
ggplot(rcFull,aes(x=rcFull[,1],y=rcFull[,2],colour=Type))+geom_point()+labs(title="Rich-Club Coefficient")
colnames(rcFull)
ggplot(rcFull,aes(x=rcFull[,1],y=rcFull[,2],colour=Network))+geom_point()+labs(title="Rich-Club Coefficient")
ggplot(rcFull,aes(x=rcFull[,2],y=rcFull[,1],colour=Network))+geom_point()+labs(title="Rich-Club Coefficient")
ggplot(rcFull,aes(x=rcFull[,2],y=rcFull[,1],colour=Network))+geom_point()+labs(title="Rich-Club Coefficient")+xlim(0,30)+ylim(0,5)
ggplot(rcFull,aes(x=rcFull[,2],y=rcFull[,1],colour=Network))+geom_point(size=2)+labs(title="Rich-Club Coefficient")+xlim(0,30)+ylim(0,5)
ggplot(rcFull,aes(x=rcFull[,2],y=rcFull[,1],colour=Network))+geom_point(size=2)+labs(x="Degree",y="Normalized Rich-Club Coefficient",title="Rich-Club Coefficient")+xlim(0,30)+ylim(0,5)
ggplot(rcFull,aes(x=rcFull[,2],y=rcFull[,1],colour=Network))+geom_point(size=5)+labs(x="Degree",y="Normalized Rich-Club Coefficient",title="Rich-Club Coefficient")+xlim(0,30)+ylim(0,5)
q("no")
